{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/nanoid@3.3.6/node_modules/nanoid/non-secure/index.js", "../../../../../node_modules/.pnpm/ai@2.1.31_react@18.2.0_solid-js@1.8.6_svelte@4.1.2_vue@3.3.8/node_modules/ai/svelte/dist/index.mjs"],
  "sourcesContent": ["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n", "// svelte/use-chat.ts\nimport { get, writable } from \"svelte/store\";\n\n// ../../node_modules/.pnpm/swrev@4.0.0/node_modules/swrev/dist/swrev.mjs\nvar P = Object.defineProperty;\nvar F = (r, e, t) => e in r ? P(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;\nvar h = (r, e, t) => (F(r, typeof e != \"symbol\" ? e + \"\" : e, t), t);\nvar I = class {\n  constructor() {\n    h(this, \"listeners\", /* @__PURE__ */ new Map());\n  }\n  /**\n   * Subscribes a given listener.\n   */\n  subscribe(e, t) {\n    this.listeners.has(e) || this.listeners.set(e, []), !this.listeners.get(e).includes(t) && this.listeners.get(e).push(t);\n  }\n  /**\n   * Unsubscribes the given listener.\n   */\n  unsubscribe(e, t) {\n    this.listeners.has(e) && this.listeners.get(e).includes(t) && (this.listeners.get(e).splice(this.listeners.get(e).indexOf(t), 1), this.listeners.get(e).length === 0 && this.listeners.delete(e));\n  }\n  /**\n   * Emits an event to all active listeners.\n   */\n  emit(e, t) {\n    this.listeners.has(e) && this.listeners.get(e).forEach((s) => s(t));\n  }\n};\nvar L = {\n  broadcast: false\n};\nvar S = {\n  broadcast: false\n};\nvar O = class {\n  /**\n   * Creates the cache item given the data and expiration at.\n   */\n  constructor({ data: e, expiresAt: t = null }) {\n    h(this, \"data\");\n    h(this, \"expiresAt\");\n    this.data = e, this.expiresAt = t;\n  }\n  /**\n   * Determines if the current cache item is still being resolved.\n   * This returns true if data is a promise, or false if type `D`.\n   */\n  isResolving() {\n    return this.data instanceof Promise;\n  }\n  /**\n   * Determines if the given cache item has expired.\n   */\n  hasExpired() {\n    return this.expiresAt === null || this.expiresAt < /* @__PURE__ */ new Date();\n  }\n  /**\n   * Set the expiration time of the given cache item relative to now.\n   */\n  expiresIn(e) {\n    return this.expiresAt = /* @__PURE__ */ new Date(), this.expiresAt.setMilliseconds(this.expiresAt.getMilliseconds() + e), this;\n  }\n};\nvar q = class {\n  constructor() {\n    h(this, \"elements\", /* @__PURE__ */ new Map());\n    h(this, \"event\", new I());\n  }\n  /**\n   * Resolves the promise and replaces the Promise to the resolved data.\n   * It also broadcasts the value change if needed or deletes the key if\n   * the value resolves to undefined or null.\n   */\n  resolve(e, t) {\n    Promise.resolve(t.data).then((s) => {\n      if (s == null)\n        return this.remove(e);\n      t.data = s, this.broadcast(e, s);\n    });\n  }\n  /**\n   * Gets an element from the cache.\n   *\n   * It is assumed the item always exist when\n   * you get it. Use the has method to check\n   * for the existence of it.\n   */\n  get(e) {\n    return this.elements.get(e);\n  }\n  /**\n   * Sets an element to the cache.\n   */\n  set(e, t) {\n    this.elements.set(e, t), this.resolve(e, t);\n  }\n  /**\n   * Removes an key-value pair from the cache.\n   */\n  remove(e, t) {\n    const { broadcast: s } = { ...L, ...t };\n    s && this.broadcast(e, void 0), this.elements.delete(e);\n  }\n  /**\n   * Removes all the key-value pairs from the cache.\n   */\n  clear(e) {\n    const { broadcast: t } = { ...S, ...e };\n    if (t)\n      for (const s of this.elements.keys())\n        this.broadcast(s, void 0);\n    this.elements.clear();\n  }\n  /**\n   * Determines if the given key exists\n   * in the cache.\n   */\n  has(e) {\n    return this.elements.has(e);\n  }\n  /**\n   * Subscribes the callback to the given key.\n   */\n  subscribe(e, t) {\n    this.event.subscribe(e, t);\n  }\n  /**\n   * Unsubscribes to the given key events.\n   */\n  unsubscribe(e, t) {\n    this.event.unsubscribe(e, t);\n  }\n  /**\n   * Broadcasts a value change  on all subscribed instances.\n   */\n  broadcast(e, t) {\n    this.event.emit(e, t);\n  }\n};\nvar x = {\n  cache: new q(),\n  errors: new I(),\n  fetcher: async (r) => {\n    const e = await fetch(r);\n    if (!e.ok)\n      throw Error(\"Not a 2XX response.\");\n    return e.json();\n  },\n  fallbackData: void 0,\n  loadInitialCache: true,\n  revalidateOnStart: true,\n  dedupingInterval: 2e3,\n  revalidateOnFocus: true,\n  focusThrottleInterval: 5e3,\n  revalidateOnReconnect: true,\n  reconnectWhen: (r, { enabled: e }) => e && typeof window < \"u\" ? (window.addEventListener(\"online\", r), () => window.removeEventListener(\"online\", r)) : () => {\n  },\n  focusWhen: (r, { enabled: e, throttleInterval: t }) => {\n    if (e && typeof window < \"u\") {\n      let s = null;\n      const i = () => {\n        const a = Date.now();\n        (s === null || a - s > t) && (s = a, r());\n      };\n      return window.addEventListener(\"focus\", i), () => window.removeEventListener(\"focus\", i);\n    }\n    return () => {\n    };\n  },\n  revalidateFunction: void 0\n};\nvar E = {\n  ...x,\n  force: false\n};\nvar T = {\n  revalidate: true,\n  revalidateOptions: { ...E },\n  revalidateFunction: void 0\n};\nvar X = {\n  broadcast: false\n};\nvar H = class {\n  /**\n   * Creates a new instance of SWR.\n   */\n  constructor(e) {\n    h(this, \"options\");\n    this.options = { ...x, ...e };\n  }\n  /**\n   * Gets the cache of the SWR.\n   */\n  get cache() {\n    return this.options.cache;\n  }\n  /**\n   * Gets the cache of the SWR.\n   */\n  get errors() {\n    return this.options.errors;\n  }\n  /**\n   * Requests the data using the provided fetcher.\n   */\n  async requestData(e, t) {\n    return await Promise.resolve(t(e)).catch((s) => {\n      throw this.errors.emit(e, s), s;\n    });\n  }\n  /**\n   * Resolves the given to a SWRKey or undefined.\n   */\n  resolveKey(e) {\n    if (typeof e == \"function\")\n      try {\n        return e();\n      } catch (e2) {\n        return;\n      }\n    return e;\n  }\n  /**\n   * Clear the specified keys from the cache. If no keys\n   * are specified, it clears all the cache keys.\n   */\n  clear(e, t) {\n    const s = { ...X, ...t };\n    if (e == null)\n      return this.cache.clear(s);\n    if (!Array.isArray(e))\n      return this.cache.remove(e, s);\n    for (const i of e)\n      this.cache.remove(i, s);\n  }\n  /**\n   * Revalidates the key and mutates the cache if needed.\n   */\n  async revalidate(e, t) {\n    if (!e)\n      throw new Error(\"[Revalidate] Key issue: ${key}\");\n    const { fetcher: s, dedupingInterval: i } = this.options, { force: a, fetcher: o, dedupingInterval: n } = {\n      ...E,\n      fetcher: s,\n      dedupingInterval: i,\n      ...t\n    };\n    if (a || !this.cache.has(e) || this.cache.has(e) && this.cache.get(e).hasExpired()) {\n      const c2 = this.requestData(e, o), l = c2.catch(() => {\n      });\n      return this.cache.set(e, new O({ data: l }).expiresIn(n)), await c2;\n    }\n    return this.getWait(e);\n  }\n  /**\n   * Mutates the data of a given key with a new value.\n   * This is used to replace the cache contents of the\n   * given key manually.\n   */\n  async mutate(e, t, s) {\n    var _a;\n    if (!e)\n      throw new Error(\"[Mutate] Key issue: ${key}\");\n    const {\n      revalidate: i,\n      revalidateOptions: a,\n      revalidateFunction: o\n    } = {\n      ...T,\n      ...s\n    };\n    let n;\n    if (typeof t == \"function\") {\n      let c2;\n      if (this.cache.has(e)) {\n        const l = this.cache.get(e);\n        l.isResolving() || (c2 = l.data);\n      }\n      n = t(c2);\n    } else\n      n = t;\n    return this.cache.set(e, new O({ data: n })), i ? await ((_a = o == null ? void 0 : o(e, a)) != null ? _a : this.revalidate(e, a)) : n;\n  }\n  /**\n   * Gets the data of the given key. Keep in mind\n   * this data will be stale and revalidate in the background\n   * unless specified otherwise.\n   */\n  subscribeData(e, t) {\n    if (e) {\n      const s = (i) => t(i);\n      return this.cache.subscribe(e, s), () => this.cache.unsubscribe(e, s);\n    }\n    return () => {\n    };\n  }\n  /**\n   * Subscribes to errors on the given key.\n   */\n  subscribeErrors(e, t) {\n    if (e) {\n      const s = (i) => t(i);\n      return this.errors.subscribe(e, s), () => this.errors.unsubscribe(e, s);\n    }\n    return () => {\n    };\n  }\n  /**\n   * Gets the current cached data of the given key.\n   * This does not trigger any revalidation nor mutation\n   * of the data.\n   * - If the data has never been validated\n   * (there is no cache) it will return undefined.\n   * - If the item is pending to resolve (there is a request\n   * pending to resolve) it will return undefined.\n   */\n  get(e) {\n    if (e && this.cache.has(e)) {\n      const t = this.cache.get(e);\n      if (!t.isResolving())\n        return t.data;\n    }\n  }\n  /**\n   * Gets an element from the cache. The difference\n   * with the get is that this method returns a promise\n   * that will resolve the the value. If there's no item\n   * in the cache, it will wait for it before resolving.\n   */\n  getWait(e) {\n    return new Promise((t, s) => {\n      const i = this.subscribeData(e, (n) => {\n        if (i(), n !== void 0)\n          return t(n);\n      }), a = this.subscribeErrors(e, (n) => {\n        if (a(), n !== void 0)\n          return s(n);\n      }), o = this.get(e);\n      if (o !== void 0)\n        return t(o);\n    });\n  }\n  /**\n   * Use a SWR value given the key and\n   * subscribe to future changes.\n   */\n  subscribe(e, t, s, i) {\n    const {\n      fetcher: a,\n      fallbackData: o,\n      loadInitialCache: n,\n      revalidateOnStart: c2,\n      dedupingInterval: l,\n      revalidateOnFocus: A2,\n      focusThrottleInterval: C,\n      revalidateOnReconnect: R,\n      reconnectWhen: W2,\n      focusWhen: D2,\n      revalidateFunction: d\n    } = {\n      // Current instance options\n      // (includes default options)\n      ...this.options,\n      // Current call options.\n      ...i\n    }, K2 = (m) => {\n      var _a;\n      return (_a = d == null ? void 0 : d(this.resolveKey(e), m)) != null ? _a : this.revalidate(this.resolveKey(e), m);\n    }, f = () => K2({ fetcher: a, dedupingInterval: l }), u = n ? this.get(this.resolveKey(e)) : o != null ? o : void 0, g = c2 ? f() : Promise.resolve(void 0), M = u ? Promise.resolve(u) : g;\n    u && (t == null || t(u));\n    const v2 = t ? this.subscribeData(this.resolveKey(e), t) : void 0, b = s ? this.subscribeErrors(this.resolveKey(e), s) : void 0, p2 = D2(f, {\n      throttleInterval: C,\n      enabled: A2\n    }), w2 = W2(f, {\n      enabled: R\n    });\n    return { unsubscribe: () => {\n      v2 == null || v2(), b == null || b(), p2 == null || p2(), w2 == null || w2();\n    }, dataPromise: M, revalidatePromise: g };\n  }\n};\n\n// ../../node_modules/.pnpm/sswr@2.0.0_svelte@4.0.0/node_modules/sswr/dist/sswr.mjs\nimport { beforeUpdate as w, onDestroy as E2 } from \"svelte\";\nfunction p() {\n}\nfunction D(t) {\n  return t();\n}\nfunction q2(t) {\n  t.forEach(D);\n}\nfunction x2(t) {\n  return typeof t == \"function\";\n}\nfunction K(t, e) {\n  return t != t ? e == e : t !== e || t && typeof t == \"object\" || typeof t == \"function\";\n}\nfunction z(t, ...e) {\n  if (t == null) {\n    for (const r of e)\n      r(void 0);\n    return p;\n  }\n  const n = t.subscribe(...e);\n  return n.unsubscribe ? () => n.unsubscribe() : n;\n}\nvar v = [];\nfunction A(t, e) {\n  return {\n    subscribe: y(t, e).subscribe\n  };\n}\nfunction y(t, e = p) {\n  let n;\n  const r = /* @__PURE__ */ new Set();\n  function i(u) {\n    if (K(t, u) && (t = u, n)) {\n      const f = !v.length;\n      for (const s of r)\n        s[1](), v.push(s, t);\n      if (f) {\n        for (let s = 0; s < v.length; s += 2)\n          v[s][0](v[s + 1]);\n        v.length = 0;\n      }\n    }\n  }\n  function a(u) {\n    i(u(t));\n  }\n  function d(u, f = p) {\n    const s = [u, f];\n    return r.add(s), r.size === 1 && (n = e(i, a) || p), u(t), () => {\n      r.delete(s), r.size === 0 && n && (n(), n = null);\n    };\n  }\n  return { set: i, update: a, subscribe: d };\n}\nfunction S2(t, e, n) {\n  const r = !Array.isArray(t), i = r ? [t] : t;\n  if (!i.every(Boolean))\n    throw new Error(\"derived() expects stores as input, got a falsy value\");\n  const a = e.length < 2;\n  return A(n, (d, u) => {\n    let f = false;\n    const s = [];\n    let h2 = 0, o = p;\n    const l = () => {\n      if (h2)\n        return;\n      o();\n      const b = e(r ? s[0] : s, d, u);\n      a ? d(b) : o = x2(b) ? b : p;\n    }, g = i.map(\n      (b, m) => z(\n        b,\n        (R) => {\n          s[m] = R, h2 &= ~(1 << m), f && l();\n        },\n        () => {\n          h2 |= 1 << m;\n        }\n      )\n    );\n    return f = true, l(), function() {\n      q2(g), o(), f = false;\n    };\n  });\n}\nvar O2 = class extends H {\n  /**\n   * Svelte specific use of SWR.\n   */\n  useSWR(e, n) {\n    let r;\n    const i = y(void 0, () => () => r == null ? void 0 : r()), a = y(void 0, () => () => r == null ? void 0 : r());\n    w(() => {\n      const o = (g) => {\n        a.set(void 0), i.set(g);\n      }, l = (g) => a.set(g);\n      r || (r = this.subscribe(e, o, l, {\n        loadInitialCache: true,\n        ...n\n      }).unsubscribe);\n    }), E2(() => r == null ? void 0 : r());\n    const d = (o, l) => this.mutate(this.resolveKey(e), o, {\n      revalidateOptions: n,\n      ...l\n    }), u = (o) => this.revalidate(this.resolveKey(e), { ...n, ...o }), f = (o) => this.clear(this.resolveKey(e), o), s = S2([i, a], ([o, l]) => o === void 0 && l === void 0), h2 = S2([i, a], ([o, l]) => o !== void 0 && l === void 0);\n    return { data: i, error: a, mutate: d, revalidate: u, clear: f, isLoading: s, isValid: h2 };\n  }\n};\nvar W = (t) => new O2(t);\nvar c = W();\nvar F2 = (t, e) => c.useSWR(t, e);\n\n// shared/utils.ts\nimport { customAlphabet } from \"nanoid/non-secure\";\nvar nanoid = customAlphabet(\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n  7\n);\nfunction createChunkDecoder() {\n  const decoder = new TextDecoder();\n  return function(chunk) {\n    if (!chunk)\n      return \"\";\n    return decoder.decode(chunk, { stream: true });\n  };\n}\n\n// svelte/use-chat.ts\nvar getStreamedResponse = async (api, chatRequest, mutate, extraMetadata, previousMessages, abortControllerRef, onFinish, onResponse, sendExtraMessageFields) => {\n  var _a, _b, _c, _d;\n  mutate(chatRequest.messages);\n  const res = await fetch(api, {\n    method: \"POST\",\n    body: JSON.stringify({\n      messages: sendExtraMessageFields ? chatRequest.messages : chatRequest.messages.map(\n        ({ role, content, name, function_call }) => ({\n          role,\n          content,\n          ...name !== void 0 && { name },\n          ...function_call !== void 0 && {\n            function_call\n          }\n        })\n      ),\n      ...extraMetadata.body,\n      ...(_a = chatRequest.options) == null ? void 0 : _a.body,\n      ...chatRequest.functions !== void 0 && {\n        functions: chatRequest.functions\n      },\n      ...chatRequest.function_call !== void 0 && {\n        function_call: chatRequest.function_call\n      }\n    }),\n    credentials: extraMetadata.credentials,\n    headers: {\n      ...extraMetadata.headers,\n      ...(_b = chatRequest.options) == null ? void 0 : _b.headers\n    },\n    ...abortControllerRef !== null && {\n      signal: abortControllerRef.signal\n    }\n  }).catch((err) => {\n    mutate(previousMessages);\n    throw err;\n  });\n  if (onResponse) {\n    try {\n      await onResponse(res);\n    } catch (err) {\n      throw err;\n    }\n  }\n  if (!res.ok) {\n    mutate(previousMessages);\n    throw new Error(await res.text() || \"Failed to fetch the chat response.\");\n  }\n  if (!res.body) {\n    throw new Error(\"The response body is empty.\");\n  }\n  let streamedResponse = \"\";\n  const createdAt = /* @__PURE__ */ new Date();\n  const replyId = nanoid();\n  const reader = res.body.getReader();\n  const decode = createChunkDecoder();\n  let responseMessage = {\n    id: replyId,\n    createdAt,\n    content: \"\",\n    role: \"assistant\"\n  };\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    streamedResponse += decode(value);\n    const functionStart = streamedResponse.indexOf(\"{\");\n    if (functionStart !== -1) {\n      const matches = /(.*?)(?:({\"function_call\".*?}})(.*))?$/gs.exec(\n        streamedResponse\n      );\n      responseMessage.content = `${(_c = matches == null ? void 0 : matches[1]) != null ? _c : \"\"}${(_d = matches == null ? void 0 : matches[3]) != null ? _d : \"\"}`;\n      responseMessage.function_call = matches == null ? void 0 : matches[2];\n    } else {\n      responseMessage.content = streamedResponse;\n    }\n    mutate([...chatRequest.messages, { ...responseMessage }]);\n    if (abortControllerRef === null) {\n      reader.cancel();\n      break;\n    }\n  }\n  if (typeof responseMessage.function_call === \"string\") {\n    const parsedFunctionCall = JSON.parse(responseMessage.function_call).function_call;\n    responseMessage.function_call = parsedFunctionCall;\n    mutate([...chatRequest.messages, { ...responseMessage }]);\n  }\n  if (onFinish) {\n    onFinish(responseMessage);\n  }\n  return responseMessage;\n};\nvar uniqueId = 0;\nvar store = {};\nfunction useChat({\n  api = \"/api/chat\",\n  id,\n  initialMessages = [],\n  initialInput = \"\",\n  sendExtraMessageFields,\n  experimental_onFunctionCall,\n  onResponse,\n  onFinish,\n  onError,\n  credentials,\n  headers,\n  body\n} = {}) {\n  const chatId = id || `chat-${uniqueId++}`;\n  const key = `${api}|${chatId}`;\n  const {\n    data,\n    mutate: originalMutate,\n    isLoading: isSWRLoading\n  } = F2(key, {\n    fetcher: () => store[key] || initialMessages,\n    fallbackData: initialMessages\n  });\n  const loading = writable(false);\n  data.set(initialMessages);\n  const mutate = (data2) => {\n    store[key] = data2;\n    return originalMutate(data2);\n  };\n  const messages = data;\n  let abortController = null;\n  const extraMetadata = {\n    credentials,\n    headers,\n    body\n  };\n  const error = writable(void 0);\n  async function triggerRequest(chatRequest) {\n    try {\n      loading.set(true);\n      abortController = new AbortController();\n      while (true) {\n        const streamedResponseMessage = await getStreamedResponse(\n          api,\n          chatRequest,\n          mutate,\n          extraMetadata,\n          get(messages),\n          abortController,\n          onFinish,\n          onResponse,\n          sendExtraMessageFields\n        );\n        if (streamedResponseMessage.function_call === void 0 || typeof streamedResponseMessage.function_call === \"string\") {\n          break;\n        }\n        if (experimental_onFunctionCall) {\n          const functionCall = streamedResponseMessage.function_call;\n          const functionCallResponse = await experimental_onFunctionCall(get(messages), functionCall);\n          if (functionCallResponse === void 0)\n            break;\n          chatRequest = functionCallResponse;\n        }\n      }\n      abortController = null;\n      return null;\n    } catch (err) {\n      if (err.name === \"AbortError\") {\n        abortController = null;\n        return null;\n      }\n      if (onError && err instanceof Error) {\n        onError(err);\n      }\n      error.set(err);\n    } finally {\n      loading.set(false);\n    }\n  }\n  const append = async (message, { options, functions, function_call } = {}) => {\n    if (!message.id) {\n      message.id = nanoid();\n    }\n    const chatRequest = {\n      messages: get(messages).concat(message),\n      options,\n      ...functions !== void 0 && { functions },\n      ...function_call !== void 0 && { function_call }\n    };\n    return triggerRequest(chatRequest);\n  };\n  const reload = async ({\n    options,\n    functions,\n    function_call\n  } = {}) => {\n    const messagesSnapshot = get(messages);\n    if (messagesSnapshot.length === 0)\n      return null;\n    const lastMessage = messagesSnapshot.at(-1);\n    if ((lastMessage == null ? void 0 : lastMessage.role) === \"assistant\") {\n      const chatRequest2 = {\n        messages: messagesSnapshot.slice(0, -1),\n        options,\n        ...functions !== void 0 && { functions },\n        ...function_call !== void 0 && { function_call }\n      };\n      return triggerRequest(chatRequest2);\n    }\n    const chatRequest = {\n      messages: messagesSnapshot,\n      options,\n      ...functions !== void 0 && { functions },\n      ...function_call !== void 0 && { function_call }\n    };\n    return triggerRequest(chatRequest);\n  };\n  const stop = () => {\n    if (abortController) {\n      abortController.abort();\n      abortController = null;\n    }\n  };\n  const setMessages = (messages2) => {\n    mutate(messages2);\n  };\n  const input = writable(initialInput);\n  const handleSubmit = (e, options = {}) => {\n    e.preventDefault();\n    const inputValue = get(input);\n    if (!inputValue)\n      return;\n    append(\n      {\n        content: inputValue,\n        role: \"user\",\n        createdAt: /* @__PURE__ */ new Date()\n      },\n      options\n    );\n    input.set(\"\");\n  };\n  return {\n    messages,\n    error,\n    append,\n    reload,\n    stop,\n    setMessages,\n    input,\n    handleSubmit,\n    isLoading: isSWRLoading || loading\n  };\n}\n\n// svelte/use-completion.ts\nimport { get as get2, writable as writable2 } from \"svelte/store\";\nvar uniqueId2 = 0;\nvar store2 = {};\nfunction useCompletion({\n  api = \"/api/completion\",\n  id,\n  initialCompletion = \"\",\n  initialInput = \"\",\n  credentials,\n  headers,\n  body,\n  onResponse,\n  onFinish,\n  onError\n} = {}) {\n  const completionId = id || `completion-${uniqueId2++}`;\n  const key = `${api}|${completionId}`;\n  const {\n    data,\n    mutate: originalMutate,\n    isLoading: isSWRLoading\n  } = F2(key, {\n    fetcher: () => store2[key] || initialCompletion,\n    fallbackData: initialCompletion\n  });\n  const loading = writable2(false);\n  data.set(initialCompletion);\n  const mutate = (data2) => {\n    store2[key] = data2;\n    return originalMutate(data2);\n  };\n  const completion = data;\n  const error = writable2(void 0);\n  let abortController = null;\n  async function triggerRequest(prompt, options) {\n    try {\n      loading.set(true);\n      abortController = new AbortController();\n      mutate(\"\");\n      const res = await fetch(api, {\n        method: \"POST\",\n        body: JSON.stringify({\n          prompt,\n          ...body,\n          ...options == null ? void 0 : options.body\n        }),\n        headers: {\n          ...headers,\n          ...options == null ? void 0 : options.headers\n        },\n        signal: abortController.signal,\n        credentials\n      }).catch((err) => {\n        throw err;\n      });\n      if (onResponse) {\n        try {\n          await onResponse(res);\n        } catch (err) {\n          throw err;\n        }\n      }\n      if (!res.ok) {\n        throw new Error(\n          await res.text() || \"Failed to fetch the chat response.\"\n        );\n      }\n      if (!res.body) {\n        throw new Error(\"The response body is empty.\");\n      }\n      let result = \"\";\n      const reader = res.body.getReader();\n      const decoder = createChunkDecoder();\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        result += decoder(value);\n        mutate(result);\n        if (abortController === null) {\n          reader.cancel();\n          break;\n        }\n      }\n      if (onFinish) {\n        onFinish(prompt, result);\n      }\n      abortController = null;\n      return result;\n    } catch (err) {\n      if (err.name === \"AbortError\") {\n        abortController = null;\n        return null;\n      }\n      if (onError && error instanceof Error) {\n        onError(error);\n      }\n      error.set(err);\n    } finally {\n      loading.set(false);\n    }\n  }\n  const complete = async (prompt, options) => {\n    return triggerRequest(prompt, options);\n  };\n  const stop = () => {\n    if (abortController) {\n      abortController.abort();\n      abortController = null;\n    }\n  };\n  const setCompletion = (completion2) => {\n    mutate(completion2);\n  };\n  const input = writable2(initialInput);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const inputValue = get2(input);\n    if (!inputValue)\n      return;\n    return complete(inputValue);\n  };\n  return {\n    completion,\n    complete,\n    error,\n    stop,\n    setCompletion,\n    input,\n    handleSubmit,\n    isLoading: isSWRLoading || loading\n  };\n}\nexport {\n  useChat,\n  useCompletion\n};\n"],
  "mappings": "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",
  "names": []
}
