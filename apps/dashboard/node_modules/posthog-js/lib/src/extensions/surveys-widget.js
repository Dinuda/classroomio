import { createMultipleQuestionSurvey, createSingleQuestionSurvey, setTextColors, style } from './surveys/surveys-utils';
import { document as _document } from '../utils/globals';
// We cast the types here which is dangerous but protected by the top level generateSurveys call
var document = _document;
var SurveysWidget = /** @class */ (function () {
    function SurveysWidget(instance, survey) {
        this.instance = instance;
        this.survey = survey;
        this.shadow = this.createWidgetShadow();
    }
    SurveysWidget.prototype.createWidget = function () {
        var _a, _b, _c, _d, _e, _f;
        var survey = this.createSurveyForWidget();
        var widget;
        if (((_a = this.survey.appearance) === null || _a === void 0 ? void 0 : _a.widgetType) === 'selector') {
            // user supplied button
            widget = document.querySelector(this.survey.appearance.widgetSelector || '');
        }
        else if (((_b = this.survey.appearance) === null || _b === void 0 ? void 0 : _b.widgetType) === 'tab') {
            widget = this.createTabWidget();
        }
        else if (((_c = this.survey.appearance) === null || _c === void 0 ? void 0 : _c.widgetType) === 'button') {
            widget = this.createButtonWidget();
        }
        if (((_d = this.survey.appearance) === null || _d === void 0 ? void 0 : _d.widgetType) !== 'selector') {
            this.shadow.appendChild(widget);
        }
        setTextColors(this.shadow);
        // reposition survey next to widget when opened
        if (survey && ((_e = this.survey.appearance) === null || _e === void 0 ? void 0 : _e.widgetType) === 'tab' && widget) {
            survey.style.bottom = 'auto';
            survey.style.borderBottom = "1.5px solid ".concat(((_f = this.survey.appearance) === null || _f === void 0 ? void 0 : _f.borderColor) || '#c9c6c6');
            survey.style.borderRadius = '10px';
            var widgetPos = widget.getBoundingClientRect();
            survey.style.top = '50%';
            survey.style.left = "".concat(widgetPos.right - 360, "px");
        }
        if (widget) {
            widget.addEventListener('click', function () {
                if (survey) {
                    survey.style.display = survey.style.display === 'none' ? 'block' : 'none';
                }
            });
            widget.setAttribute('PHWidgetSurveyClickListener', 'true');
            survey === null || survey === void 0 ? void 0 : survey.addEventListener('PHSurveyClosed', function () { return (survey.style.display = 'none'); });
        }
    };
    SurveysWidget.prototype.createTabWidget = function () {
        var _a;
        // make a permanent tab widget
        var tab = document.createElement('div');
        var html = "\n            <div class=\"ph-survey-widget-tab auto-text-color\">\n                <div class=\"ph-survey-widget-tab-icon\">\n                </div>\n                ".concat(((_a = this.survey.appearance) === null || _a === void 0 ? void 0 : _a.widgetLabel) || '', "\n            </div>\n            ");
        tab.innerHTML = html;
        return tab;
    };
    SurveysWidget.prototype.createButtonWidget = function () {
        // make a permanent button widget
        var label = 'Feedback :)';
        var button = document.createElement('button');
        var html = "\n            <div class=\"ph-survey-widget-button auto-text-color\">\n                <div class=\"ph-survey-widget-button-icon\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                </div>\n                ".concat(label, "\n            </div>\n            ");
        button.innerHTML = html;
        return button;
    };
    SurveysWidget.prototype.createSurveyForWidget = function () {
        var surveyStyleSheet = style(this.survey.id, this.survey.appearance);
        this.shadow.appendChild(Object.assign(document.createElement('style'), { innerText: surveyStyleSheet }));
        var widgetSurvey = this.survey.questions.length > 1
            ? createMultipleQuestionSurvey(this.instance, this.survey)
            : createSingleQuestionSurvey(this.instance, this.survey, this.survey.questions[0]);
        if (widgetSurvey) {
            widgetSurvey.style.display = 'none';
        }
        this.shadow.appendChild(widgetSurvey);
        // add survey cancel listener
        widgetSurvey === null || widgetSurvey === void 0 ? void 0 : widgetSurvey.addEventListener('PHSurveyClosed', function () { return (widgetSurvey.style.display = 'none'); });
        return widgetSurvey;
    };
    SurveysWidget.prototype.createWidgetShadow = function () {
        var _a;
        var div = document.createElement('div');
        div.className = "PostHogWidget".concat(this.survey.id);
        var shadow = div.attachShadow({ mode: 'open' });
        var widgetStyleSheet = "\n            .ph-survey-widget-tab {\n                position: fixed;\n                top: 50%;\n                right: 0;\n                background: ".concat(((_a = this.survey.appearance) === null || _a === void 0 ? void 0 : _a.widgetColor) || '#e0a045', ";\n                color: white;\n                transform: rotate(-90deg) translate(0, -100%);\n                transform-origin: right top;\n                min-width: 40px;\n                padding: 8px 12px;\n                font-weight: 500;\n                border-radius: 3px 3px 0 0;\n                text-align: center;\n                cursor: pointer;\n                z-index: 9999999;\n            }\n            .ph-survey-widget-tab:hover {\n                padding-bottom: 13px;\n            }\n            .ph-survey-widget-button {\n                position: fixed;\n            }\n        ");
        shadow.append(Object.assign(document.createElement('style'), { innerText: widgetStyleSheet }));
        document.body.appendChild(div);
        return shadow;
    };
    return SurveysWidget;
}());
export { SurveysWidget };
//# sourceMappingURL=surveys-widget.js.map